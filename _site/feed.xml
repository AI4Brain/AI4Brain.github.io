<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-22T00:33:40+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">AI4Brain</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Teacher Assistant-Based Knowledge Distillation Extracting Multi-level Features on Single Channel Sleep EEG</title><link href="http://localhost:4000/jekyll/update/2023/06/21/SleepKD.html" rel="alternate" type="text/html" title="Teacher Assistant-Based Knowledge Distillation Extracting Multi-level Features on Single Channel Sleep EEG" /><published>2023-06-21T21:48:13+08:00</published><updated>2023-06-21T21:48:13+08:00</updated><id>http://localhost:4000/jekyll/update/2023/06/21/SleepKD</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/06/21/SleepKD.html">&lt;p&gt;&lt;a href=&quot;&quot;&gt;Paper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HychaoWang/SleepKD&quot;&gt;Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HychaoWang/SleepKD/blob/main/docs/SleepKD-ppt.pdf&quot;&gt;Webpage&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;0-推荐语&quot;&gt;0. 推荐语&lt;/h2&gt;
&lt;p&gt;本方法针对睡眠阶段分类任务中脑电信号存在的多级特征，设计了一个基于助教模块的多级知识蒸馏框架，用于大规模睡眠模型压缩，并在两个睡眠数据集上取得了SOTA性能。&lt;/p&gt;

&lt;h2 id=&quot;1-背景介绍&quot;&gt;1. 背景介绍&lt;/h2&gt;

&lt;p&gt;近年来，睡眠障碍正在成为一个令人担忧的健康问题，影响人们的健康。睡眠阶段分类有助于判断睡眠障碍。专家通过身体不同部位传感器的信号推断每个睡眠阶段，完成对睡眠质量的分析。信号数据包括脑电图(Electroencephalogram, EEG)，肌电图(Electromyography, EMG)，眼电图(Electrooculography, EOG)等。多导睡眠图(Polysomnography, PSG)包含了所有传感器记录的信号数据。接着，这些信号数据被划分为每段30秒的数据样本，以便进行睡眠阶段的划分。最后专家根据美国睡眠医学学会(American Academy of Sleep Medicine, AASM)或睡眠手册（如Rechtschaffen and Kales, R&amp;amp;K）的标准进行睡眠阶段分期。显然，手工阶段分期需要花费大量的时间和精力。&lt;/p&gt;

&lt;p&gt;为了自动化的实现睡眠阶段分类，研究者们采用了深度学习方法，例如DeepSleepNet和SailentSleepNet，被用于自动地从睡眠数据中提取丰富多级特征帮助睡眠阶段分类。&lt;/p&gt;

&lt;h2 id=&quot;2-动机&quot;&gt;2. 动机&lt;/h2&gt;

&lt;h3 id=&quot;21-现象&quot;&gt;2.1 现象&lt;/h3&gt;

&lt;p&gt;如图1所示，睡眠数据中存在两种重要的特征，它主要被分为 epoch 级的特征和 sequence 级的特征。epoch 级的特征是单个睡眠epoch的局部特点，例如，N2 阶段中主要包括 sleep spindles 和 K complexes 两种波形。sequence 级的特征是多个睡眠 epoch 间的过渡规则，例如，N1 阶段经常作为 W 阶段和其他阶段的过渡阶段。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/ml.png&quot; alt=&quot;main&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图1 睡眠模型提取多级知识的示意图。
&lt;/div&gt;

&lt;h3 id=&quot;22-挑战与贡献&quot;&gt;2.2 挑战与贡献&lt;/h3&gt;

&lt;p&gt;为了捕获 epoch 级的特征和 sequence 级的特征，现有模型通常规模比较大，模型在移动设备和嵌入式设备上的部署非常困难，限制了模型的推广和应用。因此，如何设计一种针对多级知识的蒸馏框架实现模型轻量化是一个挑战。&lt;/p&gt;

&lt;p&gt;此外，另一个挑战是传统的知识蒸馏难以解决老师模型（大型模型）和学生模型（轻量化的模型）之间过大的差异性问题。具体而言，由于老师模型网络通常比较深，而学生模型网络通常比较浅。两种网络之间存在较大差距，这导致知识传递效率较低。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/ta.png&quot; alt=&quot;main&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图2 利用助教模块帮助知识传递的示意图。
&lt;/div&gt;

&lt;p&gt;为了解决上述挑战，我们提出了一种针对睡眠阶段分类模型的知识蒸馏通用框架。该框架是由多级蒸馏模块，助教模块，其他的知识蒸馏模块组成的。该框架可以在保持精度的前提下显著压缩模型，并且适用于主流的睡眠阶段分类模型。主要贡献如下所示：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;据我们所知，这是首次针对单通道EEG的睡眠阶段分期模型的多级知识蒸馏。我们提出的多级知识蒸馏模块可以使得睡眠数据的多种特征知识在老师模型和学生模型间进行有效地传递。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我们设计了面向睡眠分期不同模型的助教模块，填补老师模型和学生模型之间过大的gap。这提高了知识蒸馏的效果，适用于当前主流的睡眠阶段分类网络架构。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;实验结果表明，我们的蒸馏框架与现有的知识蒸馏方法相比达到了sota的性能。此外，提出的知识蒸馏框架可以在保证模型分类性能的同时显著地轻量化模型。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-问题定义&quot;&gt;3. 问题定义&lt;/h2&gt;

&lt;p&gt;模型的输入均为包含一系列睡眠epoch的睡眠序列，并输出对应的标签。每一个sleep epoch都可以表示为 $ x\in R^{n} $，其中n表示一个sleep epoch中的采样点数。输入的一系列sleep epochs 可以表示为 $ S = \left{ x_{1},x_{2},… ,x_{L}\right} $，其中 $ x_{} $ $ \left( i\in\left[ 1,2…,L \right] \right) $表示一个睡眠epoch，L 代表一个睡眠序列中epoch的数量。&lt;/p&gt;

&lt;p&gt;我们基于此提出的蒸馏框架，针对不同的睡眠分期模型进行了蒸馏。我们会根据最终的分类性能和模型压缩率进行分析判断。我们将模型的预测输出定义为 $ \tilde{Y}$，其中 $\tilde{Y}=\left{ \tilde{y_1},\tilde{y_2},…,\tilde{y_L} \right}$ and $ \tilde{y_i}\in\left{ 0,1,2,3,4 \right}$ 表示 $x_{i}$的分类结果，分别对应AASM手册中的五个睡眠阶段W，N1，N2，N3，REM。&lt;/p&gt;

&lt;h2 id=&quot;4-方法&quot;&gt;4. 方法&lt;/h2&gt;

&lt;p&gt;如图3所示，提出的睡眠阶段分类蒸馏框架主要包含三个关键点。1）我们提出了一种新颖的多级蒸馏，同时传递睡眠脑电数据中的 epoch 级的知识和 sequence 级的多级知识。2）我们设计了助教模型来填补老师模型与学生模型的之间的巨大 gap，这有助于知识的传递。3）我们计算学生模型和教师模型输出层的Kullback-Leibler divergence，让学生模型学习老师模型的 logit 知识。这可以进一步提高蒸馏效果。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/main.png&quot; alt=&quot;main&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图3 SleepKD的框架图。
&lt;/div&gt;

&lt;h3 id=&quot;41-多级模块&quot;&gt;4.1 多级模块&lt;/h3&gt;

&lt;p&gt;睡眠数据中存在两种重要的特征，它主要被分为 epoch 级的特征和 sequence 级的特征。它们分别表示单个睡眠epoch的局部特点和多个睡眠 epoch 间的过渡规则。为了捕获这两种特征，现有模型的中间层通常规模比较大。本文中，我们使用知识蒸馏技术，将大规模的模型（老师模型）所提取到的知识传递给小规模的模型（学生模型），实现了模型的轻量化。&lt;/p&gt;

&lt;p&gt;因为模型中间层用于获取epoch级和sequence级的知识，我们对网络的中间层进行了蒸馏。具体而言，我们最小化老师模型和学生模型中间层 epoch 级别的特征图损失值。这使学生模型向老师模型学习到更丰富的 epoch 特征知识。因此促进了学生模型更好的获取到单个 epoch 的特征并用于分类。epoch loss 计算公式如下：&lt;/p&gt;

\[L_{epoch}=MSE(F_{e}^{T},F_{e}^{S})\]

&lt;p&gt;其中，MSE 表示均方误差损失函数。$F_{e}^{T}$ 表示老师模型中间层中 epoch 级别的特征图。$F_{e}^{S}$ 表示学生模型中间层中 epoch 级别的特征图。&lt;/p&gt;

&lt;p&gt;此外，如图4所示，我们计算老师模型和学生模型中间层 sequence 级别的特征图损失值。通过最小化损失值，让学生模型去学习教师模型中 sequence 级的知识。这可以让学生模型学习到更丰富的睡眠转换规则，进一步的提高分类性能。sequence loss 计算公式如下：&lt;/p&gt;

\[L_{seq}=MSE(F_{s}^{T}, F_{s}^{S})\]

&lt;p&gt;其中，MSE 表示均方误差损失函数。$F_{s}^{T}$ 表示老师模型中间层中 sequence 级别的特征图。$F_{s}^{T}$ 表示学生模型中间层中 sequence 级别的特征图。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/mlkd.png&quot; alt=&quot;mlkd&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图4 多级模块传递epoch和sequence级知识的示意图。
&lt;/div&gt;

&lt;h3 id=&quot;42-助教模块&quot;&gt;4.2 助教模块&lt;/h3&gt;

&lt;p&gt;现有研究表明，当学生网络和老师网络相差过大时，知识的传递会受到阻碍。我们面向睡眠分期任务设计助教模型，这能填补老师模型和学生模型之间过大的差异性，使得蒸馏效果更好。&lt;/p&gt;

&lt;p&gt;我们针对当前的两种典型的睡眠分期架构进行了助教模块的设计。一类是基于 CNN 的架构，另一类是基于 CNN 和 RNN 的混合架构。对于使用 CNN 提取脑电数据 epoch 与 sequence 特征的模型，我们设计了一个中等规模的助教模型。我们将助教模型的 CNN 的层数控制在老师模型和学生模型之间。例如，老师模型 CNN 层的数量为 6。学生模型 CNN 层的数量为 2。我们将助教模型的 CNN 层数量设为 4，以填补老师模型和学生模型之间过大的差异，有利于更好的进行知识传递。具体设计示意图如图 5 所示。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/CNNFramework.png&quot; alt=&quot;CNNFramework&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图5 对于CNN架构的TA模块设计。
&lt;/div&gt;

&lt;p&gt;对于使用 CNN 和 RNN 的混合架构，我们设计了一个规模大小介于老师模型与学生模型之间的助教模型。首先，对于助教模型的 CNN 层部分，我们同上进行删减。使助教模型的 CNN 深度介于老师模型和学生模型之间。其次，我们设计了一个中等规模的 RNN组件去提取sequence级的特征。比如，老师模型 RNN 层的隐藏层维度为 512。学生模型 RNN 层的隐藏层维度大小为 128。我们设计将助教模型 RNN 层的隐藏层维度设为 256。我们通过这样的设计促进知识传递，对应的设计示意图如图 6 所示。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/CNNRNNFramework.png&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图6 对于CNN+RNN架构的TA模块设计。
&lt;/div&gt;

&lt;h3 id=&quot;43-其他知识蒸馏模块&quot;&gt;4.3 其他知识蒸馏模块&lt;/h3&gt;

&lt;p&gt;教师模型输出的软标签也包含了很多有用的知识。因此，我们引入 KL 散度，计算老师模型以及学生模型之间的 $ L_{soft} $。这使得教师模型可以向学生模型传递其 logits 分布中的知识。学生模型可以学习到老师模型的推理信息。$ L_{soft} $ 计算公式如下：&lt;/p&gt;

\[L_{soft}=KL_{}(y^{T},y^{S})\]

&lt;p&gt;其中，KL 表示相对熵，用于计算老师模型和学生模型之间输出分布的相对熵。$y_t$ 表示教师模型的输出，$y_s$ 表示学生模型的输出。此外，我们还使用交叉熵损失函数计算得到 hard loss，获得了硬标签中的知识。hard loss 计算公式如下：&lt;/p&gt;

\[L_{hard}=L_{CE}(y,\ softmax(z_{s}))\]

&lt;p&gt;其中 $L_{CE}$ 表示交叉熵损失函数，$y$ 表示 true label。$softmax(z_s)$ 表示学生模型输出的分类结果。最后，我们的损失函数共由四部分组成，分别为： $ L_{epoch} $, $ L_{seq} $, $ L_{soft} $, $ L_{hard} $，权重分别为 $ \alpha，\beta，\gamma，\delta $。总损失函数计算公式如下：&lt;/p&gt;

\[L=\alpha L_{epoch}+\beta L_{seq}+\gamma L_{soft}+\delta L_{hard}\]

&lt;h2 id=&quot;5-实验&quot;&gt;5. 实验&lt;/h2&gt;

&lt;h3 id=&quot;51-数据集&quot;&gt;5.1 数据集&lt;/h3&gt;

&lt;p&gt;我们在两个公共数据集上评估了我们的方法：ISRUC-III和Sleep-EDF。ISRUC-III在8小时内收集了10名受试者（1名男性和9名女性）持续了一整晚的PSG数据样本。该数据集的标签由两名专家评分。Sleep-EDF是一个非常著名的公共数据集，包含20名受试人的PSG样本（男性10人，女性10人），受试者的年龄从25至34岁。睡眠专家根据R&amp;amp;K标准将这些记录手动分类为八个类别之一（W、N1、N2、N3、N4、REM、Movement、Unknown）。为了进行公平的比较，我们删除了Movement和Unknown阶段，并根据AASM手册将N3和N4阶段合并为一个N3阶段。在实验数据中，EEG通常被分割为30秒的睡眠时期。我们最终提取了睡眠EDF中来自Fpz-Cz通道的EEG信号的睡眠阶段和ISRUC-III中来自F3-A2的EEG信息的睡眠阶段。每个数据集的EEG数据被下采样到100Hz。&lt;/p&gt;

&lt;h3 id=&quot;52-实验结果&quot;&gt;5.2 实验结果&lt;/h3&gt;

&lt;p&gt;我们从三个方面选择了一些经典的、性能良好的知识蒸馏方法作为基线方法：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/baseline.png&quot; alt=&quot;&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如表1和表2所示，我们在SalientSleepNet和DeepSleepNet上使用SleepKD和基线方法进行了几项实验，这两个模型分别具有CNN框架和基于CNN和RNN的混合框架。我们的SleepKD实现了SOTA知识蒸馏的结果。&lt;/p&gt;

&lt;p&gt;在SalientSleepNet的结果如下：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/dsn_result.png&quot; alt=&quot;&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;在DeepSleepNet的结果如下：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/ssn_result.png&quot; alt=&quot;&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;53-消融实验&quot;&gt;5.3 消融实验&lt;/h3&gt;

&lt;p&gt;为了评估每个模块的有效性，设计了消融实验。在相同的实验设置下，我们选择不同的损失项组合来验证SleepKD损失函数 $L_{Total}$ 中每个Loss项的有效性:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$L1=L_{Total}−L_{seq}$&lt;/li&gt;
  &lt;li&gt;$L2=L_{Total}−L_{epoch}$&lt;/li&gt;
  &lt;li&gt;$L3=L_{Total}−L_{soft}$&lt;/li&gt;
  &lt;li&gt;$L4=L_{Total}−L_{hard}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;实验结果显示，这些Loss项都传递有价值的信息，对蒸馏有帮助。$L_{epoch}$ 和 $L_{seq}$ 传递的脑电信号的多级知识显著提高了学生模型性能。学生通过$L_{soft}$ 学习教师的概率分布，通过$L_{hard}$ 学习标签中的知识。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/ab1.png&quot; alt=&quot;CNNFramework&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图7 对于Loss项的消融实验结果。
&lt;/div&gt;

&lt;p&gt;为了证明教师辅助模块的有效性，设计了以下方案：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;varient a: Multi-Level Module&lt;/li&gt;
  &lt;li&gt;varient b: Multi-Level Module + TA Module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;实验结果显示，助教模块帮助了多级知识的传递，并通过平滑教师和学生网络之间的差距来帮助传递logits知识。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://ai4brain.github.io/image/SleepKD/ab2.png&quot; alt=&quot;CNNFramework&quot; style=&quot;zoom: 33%;&quot; /&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
    图8 对于TA模块的消融实验结果。
&lt;/div&gt;

&lt;h2 id=&quot;6-总结&quot;&gt;6. 总结&lt;/h2&gt;

&lt;p&gt;在本文中，我们为睡眠阶段分类模型提出了一个知识蒸馏框架。我们首次将知识蒸馏应用于多级睡眠阶段分类模型，并引入教师辅助模块来改进蒸馏。实验表明，我们的蒸馏框架在两种流行的架构（基于CNN的架构以及CNN和RNN的混合架构）上取得了优异的结果。&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Paper</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2023/06/21/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-06-21T21:48:13+08:00</published><updated>2023-06-21T21:48:13+08:00</updated><id>http://localhost:4000/jekyll/update/2023/06/21/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/06/21/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>